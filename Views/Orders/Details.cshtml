@model food_takeout.Models.Order

@{
    ViewBag.Title = "订单详情";
}

<h2>订单详情</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>订单信息</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">订单编号</dt>
                    <dd class="col-sm-9">@Model.OrderId</dd>
                    
                    <dt class="col-sm-3">订单状态</dt>
                    <dd class="col-sm-9">
                        @{
                            string statusClass = "";
                            switch (Model.Status)
                            {
                                case food_takeout.Models.OrderStatus.Pending:
                                    statusClass = "badge bg-warning text-dark";
                                    break;
                                case food_takeout.Models.OrderStatus.Preparing:
                                    statusClass = "badge bg-info text-white";
                                    break;
                                case food_takeout.Models.OrderStatus.ReadyForDelivery:
                                    statusClass = "badge bg-primary";
                                    break;
                                case food_takeout.Models.OrderStatus.InDelivery:
                                    statusClass = "badge bg-primary";
                                    break;
                                case food_takeout.Models.OrderStatus.Delivered:
                                    statusClass = "badge bg-success";
                                    break;
                                case food_takeout.Models.OrderStatus.Cancelled:
                                    statusClass = "badge bg-danger";
                                    break;
                            }
                        }
                        <span class="@statusClass">@Html.DisplayFor(model => model.Status)</span>
                    </dd>
                    
                    <dt class="col-sm-3">餐厅</dt>
                    <dd class="col-sm-9">@Model.Restaurant.Name</dd>
                    
                    <dt class="col-sm-3">顾客</dt>
                    <dd class="col-sm-9">@Model.Customer.Username</dd>
                    
                    @if (Model.Rider != null)
                    {
                        <dt class="col-sm-3">配送骑手</dt>
                        <dd class="col-sm-9">@Model.Rider.Name (@Model.Rider.PhoneNumber)</dd>
                    }
                    
                    <dt class="col-sm-3">下单时间</dt>
                    <dd class="col-sm-9">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                    
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <dt class="col-sm-3">最后更新</dt>
                        <dd class="col-sm-9">@Model.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                    }
                </dl>
                
                <div class="mt-3">
                    @if (Model.Status == food_takeout.Models.OrderStatus.Pending)
                    {
                        using (Html.BeginForm("Cancel", "Orders", new { id = Model.OrderId }, FormMethod.Post, new { style = "display:inline" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger" onclick="return confirm('确定要取消此订单吗？');">
                                取消订单
                            </button>
                        }
                    }
                    
                    @if (Model.Status == food_takeout.Models.OrderStatus.Delivered)
                    {
                        // 检查订单是否已经评价
                        bool hasReview = ViewBag.HasReview != null && ViewBag.HasReview;
                        
                        if (!hasReview)
                        {
                            @Html.ActionLink("评价订单", "Review", new { id = Model.OrderId }, new { @class = "btn btn-success" })
                        }
                    }
                    
                    @Html.ActionLink("返回我的订单", "MyOrders", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
        
        <div class="card mt-4">
            <div class="card-header">
                <h4>订单明细</h4>
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>菜品</th>
                            <th class="text-center">单价</th>
                            <th class="text-center">数量</th>
                            <th class="text-end">小计</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            decimal total = 0;
                        }
                        
                        @foreach (var detail in Model.OrderDetails)
                        {
                            decimal subtotal = detail.UnitPrice * detail.Quantity;
                            total += subtotal;
                            
                            <tr>
                                <td>@detail.Dish.Name</td>
                                <td class="text-center">¥@detail.UnitPrice.ToString("F2")</td>
                                <td class="text-center">@detail.Quantity</td>
                                <td class="text-end">¥@subtotal.ToString("F2")</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="3" class="text-end">总计:</th>
                            <th class="text-end">¥@total.ToString("F2")</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        @if (ViewBag.Review != null)
        {
            var review = ViewBag.Review as food_takeout.Models.Review;
            <div class="card">
                <div class="card-header">
                    <h4>订单评价</h4>
                </div>
                <div class="card-body">
                    <p>
                        <strong>评分:</strong>
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= review.Rating)
                            {
                                <span class="text-warning">★</span>
                            }
                            else
                            {
                                <span class="text-muted">☆</span>
                            }
                        }
                        (@review.Rating/5)
                    </p>
                    
                    <p>
                        <strong>评价内容:</strong>
                        <br />
                        @review.Comment
                    </p>
                    
                    <p>
                        <small class="text-muted">评价时间: @review.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
                    </p>
                </div>
            </div>
        }
    </div>
</div> 